ÍNDICE DE ARCHIVOS:

1. app/layout.jsx
2. app/page.jsx
3. app/products/[id]/page.jsx
4. components/ContactForm.jsx
5. components/Faq.jsx
6. components/Features.jsx
7. components/Footer.jsx
8. components/Hero.jsx
9. components/Hero.module.css
10. components/Navbar.jsx
11. components/Products.jsx
12. modelo_abc.js
13. modelo_costos.js
14. package.json
15. public/data/products.json
16. public/products.json



// ----- app/layout.jsx -----

import { Inter } from 'next/font/google'
import './globals.css'
import Navbar from '@/components/Navbar'
import Footer from '@/components/Footer'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Bolsas impresas',
  description: 'Bolsas impresas personalizadas para tu negocio',
}

export default function RootLayout({ children }) {
  return (
    <html lang="es">
      <body>
        <Navbar />
        <main className='mx-auto '>{children}</main>
        <Footer />
      </body>
    </html>
  )
}


// ----- app/page.jsx -----

"use_client"

import Hero from '@/components/Hero';
import Products from '@/components/Products';
import ContactForm from '@/components/ContactForm';
import Features from '@/components/Features';
import Faq from '@/components/Faq';

export default function Home() {
  return (
    <div>
      <Hero />
      <section id="features">
        <Features />
      </section>
      <section id="productos">
        <Products />
      </section>
      <section id="faq">
        <Faq />
      </section>
      <section id="contacto">
        <ContactForm />
      </section>
    </div>
  );
}


// ----- app/products/[id]/page.jsx -----

"use client";
import { useState, useEffect } from 'react';
import Image from 'next/image';

// Simulación de los datos del JSON
const fetchProducts = async () => {
    const res = await fetch('/data/products.json');
    const data = await res.json();
    return data;
};

export default function ProductDetails({ params }) {
    const [product, setProduct] = useState(null);
    const { id } = params;

    useEffect(() => {
        const getProduct = async () => {
            const products = await fetchProducts();
            const product = products.find((p) => p.id === parseInt(id));
            setProduct(product);
        };
        if (id) {
            getProduct();
        }
    }, [id]);

    // Función para manejar el click en el botón de compra
    const handlePurchaseClick = () => {
        const message = `Hola, me interesa la bolsa ${product.name} en alguno de los siguientes tamaños: ${product.sizes.map(size => size.size).join(', ')}.`;
        const whatsappUrl = `https://wa.me/56955242398?text=${encodeURIComponent(message)}`;
        window.open(whatsappUrl, '_blank');
    };

    if (!product) return <p>Cargando...</p>;

    return (
        <div className="container mx-auto py-8 px-4">
            <div className="flex flex-col items-center md:flex-row md:space-x-8">
                {/* Imagen del Producto */}
                <div className="w-full md:w-1/2">
                    <Image src={product.image} alt={product.name} width={500} height={500} className="rounded-lg shadow-lg" />
                </div>

                {/* Detalles del Producto */}
                <div className="w-full md:w-1/2">
                    <h1 className="text-4xl font-bold mb-4">{product.name}</h1>
                    <p className="text-lg mb-6">{product.description}</p>

                    {/* Colores Disponibles */}
                    <h3 className="text-2xl font-semibold mb-4">Colores Disponibles</h3>
                    <p className="mb-6">{product.colors.join(', ')}</p>

                    {/* Tabla de Precios y Tamaños */}
                    <table className="w-full table-auto border-collapse">
                        <thead>
                            <tr className="bg-gray-200">
                                <th className="border px-4 py-2 text-left">Tamaño</th>
                                <th className="border px-4 py-2 text-left">Precio</th>
                            </tr>
                        </thead>
                        <tbody>
                            {product.sizes.map((size, index) => (
                                <tr key={index} className="hover:bg-gray-100">
                                    <td className="border px-4 py-2">{size.size}</td>
                                    <td className="border px-4 py-2">{size.price}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>

                    <button
                        onClick={handlePurchaseClick}
                        className="bg-blue-500 hover:bg-blue-700 text-white py-2 px-6 rounded-lg mt-6"
                    >
                        Quiero esta bolsa
                    </button>
                </div>
            </div>
        </div>
    );
}


// ----- components/ContactForm.jsx -----

export default function ContactForm() {
    return (
        <section className="py-16 bg-blue-50">
            <div className="container mx-auto px-4">
                <h2 className="text-center text-3xl font-bold mb-8">Contáctanos</h2>
                <div className="max-w-xl mx-auto">
                    <form className="space-y-4">
                        <input type="text" placeholder="Nombre" className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
                        <input type="email" placeholder="Correo" className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:border-blue-500" />
                        <textarea placeholder="Mensaje" className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:border-blue-500"></textarea>
                        <button type="submit" className="w-full bg-blue-500 hover:bg-blue-700 text-white py-3 px-6 rounded-lg">Enviar</button>
                    </form>
                </div>
            </div>
        </section>
    );
}


// ----- components/Faq.jsx -----

"use client"; // Indica que este es un componente cliente

import { useState } from 'react';
import { FiChevronDown, FiChevronUp } from 'react-icons/fi';

const faqs = [
    {
        question: "¿Cuánto tiempo tarda en producirse mi pedido?",
        answer: "El tiempo de producción varía según la cantidad y el tipo de bolsa. Generalmente, el tiempo de producción es de entre 7 y 10 días hábiles.",
    },
    {
        question: "¿Puedo personalizar las bolsas con mi logotipo?",
        answer: "Sí, ofrecemos la posibilidad de personalizar las bolsas con tu logotipo o imagen corporativa. Puedes enviarnos tu diseño y nosotros nos encargaremos del resto.",
    },
    {
        question: "¿Qué tipos de materiales utilizan?",
        answer: "Ofrecemos bolsas de papel reciclable, algodón y plástico, todas disponibles en diferentes tamaños y estilos.",
    },
    {
        question: "¿Tienen descuentos por pedidos grandes?",
        answer: "Sí, ofrecemos descuentos por pedidos al por mayor. Contáctanos para recibir una cotización personalizada.",
    },
    // Nueva pregunta sobre el procedimiento
    {
        question: "¿Cuál es el procedimiento para realizar un pedido?",
        answer: `
            1.- Nos envía sus requerimientos.\n
            2.- Confeccionamos un diseño, hasta que quede conforme.\n
            3.- Solicitamos un abono.\n
            4.- Puede retirar su pedido en Pasaje Las Papayas 5330, Macul, o solicitar envío por delivery, Starken o Chilexpress.`,
    },
];

export default function Faq() {
    const [activeIndex, setActiveIndex] = useState(null);

    const toggleFaq = (index) => {
        setActiveIndex(activeIndex === index ? null : index);
    };

    return (
        <section className="py-16 bg-gray-100">
            <div className="container mx-auto px-4">
                <h2 className="text-center text-3xl font-bold mb-8">Preguntas Frecuentes</h2>
                <div className="max-w-2xl mx-auto space-y-4">
                    {faqs.map((faq, index) => (
                        <div key={index} className="border-b-2 border-gray-300 pb-4">
                            <button
                                onClick={() => toggleFaq(index)}
                                className="w-full flex justify-between items-center text-left text-xl font-semibold focus:outline-none py-3"
                            >
                                <span>{faq.question}</span>
                                <span className="ml-2">
                                    {activeIndex === index ? <FiChevronUp /> : <FiChevronDown />}
                                </span>
                            </button>
                            <div
                                className={`overflow-hidden transition-all duration-300 ease-in-out ${activeIndex === index ? 'max-h-80' : 'max-h-0'
                                    }`}
                            >
                                <p className="mt-2 text-gray-600 leading-tight whitespace-pre-line">
                                    {faq.answer}
                                </p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
}


// ----- components/Features.jsx -----

export default function Features() {
    const features = [
        {
            id: 1,
            title: "Ecológicas",
            description: "Nuestras bolsas están hechas de materiales reciclables y respetuosos con el medio ambiente.",
            icon: "🌿",
        },
        {
            id: 2,
            title: "Personalizables",
            description: "Diseña tus bolsas con tu logotipo o imagen corporativa para una máxima personalización.",
            icon: "🎨",
        },
        {
            id: 3,
            title: "Alta Durabilidad",
            description: "Fabricadas con materiales de alta calidad, nuestras bolsas están hechas para durar.",
            icon: "🛠️",
        },
        {
            id: 4,
            title: "Variedad de Materiales",
            description: "Ofrecemos bolsas de papel, algodón y plástico en diferentes tamaños y estilos.",
            icon: "🛍️",
        },
    ];

    return (
        <section className="py-16 bg-white">
            <div className="container mx-auto px-4">
                <h2 className="text-center text-3xl font-bold mb-8">¿Por qué elegir nuestras bolsas?</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                    {features.map((feature) => (
                        <div key={feature.id} className="bg-gray-100 p-6 rounded-lg shadow-lg text-center">
                            <div className="text-5xl mb-4">{feature.icon}</div>
                            <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
                            <p className="text-gray-600">{feature.description}</p>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
}


// ----- components/Footer.jsx -----

export default function Footer() {
    return (
        <footer className="bg-gray-800 text-white p-4 text-center">
            <div className="container mx-auto">
                <p>&copy; {new Date().getFullYear()} Bolsas Impresas. Todos los derechos reservados.</p>

                {/* Enlaces a redes sociales (opcional) */}
                <div className="mt-4 space-x-4">
                    <a href="https://facebook.com" target="_blank" rel="noopener noreferrer" className="hover:underline">
                        Facebook
                    </a>
                    <a href="https://instagram.com" target="_blank" rel="noopener noreferrer" className="hover:underline">
                        Instagram
                    </a>
                    <a href="https://twitter.com" target="_blank" rel="noopener noreferrer" className="hover:underline">
                        Twitter
                    </a>
                </div>
            </div>
        </footer>
    );
}


// ----- components/Hero.jsx -----

import styles from './Hero.module.css';

export default function Hero() {
    return (
        <section
            className="relative w-full bg-cover bg-center flex flex-col justify-center items-center text-center"
            style={{
                backgroundImage: `url('/images/hero.jpg')`,
                minHeight: '60vh',
                backgroundSize: 'cover',
                backgroundPosition: 'center',
            }}
        >
            {/* Overlay */}
            <div className="absolute inset-0 bg-black opacity-50 z-0"></div>

            {/* Contenido del Hero */}
            <div className={`${styles.fadeIn} relative z-10`}>
                <h1 className="text-5xl font-bold text-white">¡Bolsas Impresas Personalizadas!</h1>
                <p className="mt-4 text-xl text-white">Calidad y estilo para tu marca.</p>
                <button className="mt-6 bg-blue-500 hover:bg-blue-700 text-white py-3 px-6 rounded-lg">
                    Solicitar Presupuesto
                </button>
            </div>

            {/* Indicador de desplazamiento hacia abajo */}
            <div className={`absolute bottom-10 z-10 ${styles.bounce}`}>
                <a href="#productos" className={styles.arrowDown}>
                    <span className="text-white text-3xl">↓</span>
                </a>
            </div>
        </section>
    );
}


// ----- components/Hero.module.css -----

/* Hero.module.css */


/* Animación para que el contenido aparezca suavemente */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fadeIn {
  animation: fadeIn 1s ease-in-out;
}

/* Animación de rebote para la flecha */
.bounce {
  animation: bounce 2s infinite;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Estilos para la flecha */
.arrowDown {
  width: 50px;
  height: 50px;
  background-color: rgba(255, 255, 255, 0.3); /* Fondo semitransparente */
  border-radius: 50%; /* Círculo */
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.3s ease, background-color 0.3s ease;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Sombra */
}

.arrowDown:hover {
  background-color: rgba(255, 255, 255, 0.6); /* Más visible al pasar el mouse */
  transform: scale(1.2); /* Aumenta ligeramente el tamaño */
}


// ----- components/Navbar.jsx -----

"use client";

import { useState } from 'react';
import Link from 'next/link';

export default function Navbar() {
    const [isOpen, setIsOpen] = useState(false);

    const toggleMenu = () => {
        setIsOpen(!isOpen);
    };

    return (
        <nav className="bg-blue-600 text-white p-4">
            <div className="container mx-auto flex justify-between items-center">
                {/* Logo */}
                <Link href="/" className="text-2xl font-bold">
                    Bolsas Impresas
                </Link>

                {/* Menú hamburguesa visible en pantallas pequeñas */}
                <div className="md:hidden">
                    <button onClick={toggleMenu} className="focus:outline-none">
                        <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16m-7 6h7" />
                        </svg>
                    </button>
                </div>

                {/* Links de navegación visibles en pantallas medianas y grandes */}
                <div className="hidden md:flex space-x-4">
                    <Link href="/" className="hover:underline">
                        Inicio
                    </Link>
                    <Link href="#productos" className="hover:underline">
                        Productos
                    </Link>
                    <Link href="#contacto" className="hover:underline">
                        Contacto
                    </Link>
                </div>
            </div>

            {/* Menú desplegable en pantallas pequeñas */}
            {isOpen && (
                <div className="md:hidden mt-4">
                    <ul className="space-y-4 text-center">
                        <li>
                            <Link href="/" className="hover:underline" onClick={toggleMenu}>
                                Inicio
                            </Link>
                        </li>
                        <li>
                            <Link href="#productos" className="hover:underline" onClick={toggleMenu}>
                                Productos
                            </Link>
                        </li>
                        <li>
                            <Link href="#contacto" className="hover:underline" onClick={toggleMenu}>
                                Contacto
                            </Link>
                        </li>
                    </ul>
                </div>
            )}
        </nav>
    );
}


// ----- components/Products.jsx -----

"use client"

import Image from 'next/image';
import Link from 'next/link';
import { useState, useEffect } from 'react'


const fetchProducts = async () => {
    const res = await fetch('/data/products.json');
    const data = await res.json();
    return data;
}

export default function Products() {
    const [products, setProducts] = useState([]);

    useEffect(() => {
        const getProducts = async () => {
            const products = await fetchProducts();
            setProducts(products);
        };
        getProducts();
    }, []);

    return (
        <section className="py-16 bg-gray-100">
            <div className="container mx-auto px-4">
                <h2 className="text-center text-3xl font-bold mb-8">Nuestros Productos</h2>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                    {products.map(product => (
                        <div key={product.id} className="bg-white rounded-lg shadow-lg p-6">
                            <Image src={product.image} alt={product.name} width={500} height={500} className="rounded-lg" />
                            <h3 className="text-xl font-semibold mt-4">{product.name}</h3>
                            <p className="mt-2 text-gray-600">{product.description}</p>
                            <Link href={`/products/${product.id}`} className="text-blue-500 hover:underline mt-4 block">
                                Ver más
                            </Link>
                        </div>
                    ))}
                </div>
            </div>
        </section>
    );
}


// ----- modelo_abc.js -----

// Definición de costos constantes
const COSTOS = {
    diseno: 5000, // CLP
    vellum: 3000, // CLP
    revelado: 2000, // CLP
    malla: 500, // CLP
    tinta: 1100, // CLP (0.1 kg para 100 bolsas)
    impresionPorBolsa: 10, // CLP
    secadoPorBolsa: 5, // CLP
    embalajePorBolsa: 5, // CLP
    bolsa: {
        papel: 20,
        tnt: 25,
        plastico: 30,
        genero: 40
    }
};

// Cantidad de bolsas a producir
const CANTIDAD_BOLSAS = [30,50,100,150,200];

// Funciones de cálculo
function calcularCostoFijo() {
    const { diseno, vellum, revelado, malla } = COSTOS;
    return diseno + vellum + revelado + malla;
}

function calcularCostoVariable(cantidadBolsas, tipoBolsa) {
    const { tinta, impresionPorBolsa, secadoPorBolsa, embalajePorBolsa, bolsa } = COSTOS;
    return tinta + (impresionPorBolsa + secadoPorBolsa + embalajePorBolsa + bolsa[tipoBolsa]) * cantidadBolsas;
}

function calcularCostoTotal(cantidadBolsas, tipoBolsa) {
    return calcularCostoFijo() + calcularCostoVariable(cantidadBolsas, tipoBolsa);
}

function generarListaPrecios(tipoBolsa) {
    return CANTIDAD_BOLSAS.map(cantidad => ({
        cantidadBolsas: cantidad,
        costoTotal: calcularCostoTotal(cantidad, tipoBolsa)
    }));
}

// Ejemplo de uso
const listaPrecios = generarListaPrecios('papel');
console.log(listaPrecios);

// ----- modelo_costos.js -----

class Bolsa {
    constructor(material, tamaño, costoUnitario) {
        this.material = material;
        this.tamaño = tamaño;
        this.costoUnitario = costoUnitario;
    }
}

class Pedido {
    constructor(bolsa, cantidad, numeroColores, costoDiseño) {
        this.bolsa = bolsa;
        this.cantidad = cantidad;
        this.numeroColores = numeroColores;
        this.costoDiseño = costoDiseño;
    }
}

class CalculadoraDeCostos {
  /**
   * @param {Pedido} pedido - Instancia de la clase Pedido
   * @param {Object} datosBasicos - Objeto con los factores de costo detallados
   */
  constructor(pedido, datosBasicos) {
    this.pedido = pedido;
    this.datosBasicos = datosBasicos;
  }

  // Método para calcular el costo total de las bolsas
  calcularCostoBolsas() {
    return this.pedido.bolsa.costoUnitario * this.pedido.cantidad;
  }

  // Método para calcular el costo de tinta
  calcularCostoTinta() {
    const { valorTarroTinta, rendimientoTarroTinta } = this.datosBasicos;
    const costoTintaPorBolsa = valorTarroTinta / rendimientoTarroTinta;
    return costoTintaPorBolsa * this.pedido.numeroColores * this.pedido.cantidad;
  }

  // Método para calcular el costo de mano de obra
  calcularCostoManoDeObra() {
    const { costoManoDeObraPorHora, tiempoImpresionPorBolsaMin, tiempoPreparacionMin } = this.datosBasicos;
    const tiempoTotalMin = (tiempoImpresionPorBolsaMin * this.pedido.cantidad) + tiempoPreparacionMin;
    const tiempoTotalHoras = tiempoTotalMin / 60;
    return tiempoTotalHoras * costoManoDeObraPorHora;
  }

  // Método para calcular el costo de secado
  calcularCostoSecado() {
    const { costoEnergiaPorHora, tiempoSecadoPorBolsaMin } = this.datosBasicos;
    const tiempoTotalSecadoMin = tiempoSecadoPorBolsaMin * this.pedido.cantidad;
    const tiempoTotalSecadoHoras = tiempoTotalSecadoMin / 60;
    return tiempoTotalSecadoHoras * costoEnergiaPorHora;
  }

  // Método para calcular los gastos generales
  calcularGastosGenerales() {
    const { gastosGeneralesMensuales, produccionMensualEstimada } = this.datosBasicos;
    const gastosGeneralesPorBolsa = gastosGeneralesMensuales / produccionMensualEstimada;
    return gastosGeneralesPorBolsa * this.pedido.cantidad;
  }

  // Método para calcular el costo total
  calcularCostoTotal() {
    return (
      this.calcularCostoBolsas() +
      this.pedido.costoDiseño +
      this.calcularCostoTinta() +
      this.calcularCostoManoDeObra() +
      this.calcularCostoSecado() +
      this.calcularGastosGenerales()
    );
  }

  // Método para calcular el precio de venta
  calcularPrecioVenta(margenBeneficio) {
    const costoTotal = this.calcularCostoTotal();
    return costoTotal * (1 + margenBeneficio / 100);
  }
}


// Datos básicos
const datosBasicos = {
  valorTarroTinta: 50.00,              // Costo de un tarro de tinta
  rendimientoTarroTinta: 1000,         // Número de bolsas por tarro de tinta
  costoManoDeObraPorHora: 20.00,       // Costo de mano de obra por hora
  tiempoImpresionPorBolsaMin: 0.5,     // Tiempo de impresión por bolsa en minutos
  tiempoPreparacionMin: 15,            // Tiempo de preparación en minutos
  costoEnergiaPorHora: 5.00,           // Costo de energía por hora
  tiempoSecadoPorBolsaMin: 2,          // Tiempo de secado por bolsa en minutos
  gastosGeneralesMensuales: 2000.00,   // Gastos generales mensuales
  produccionMensualEstimada: 5000      // Producción mensual estimada de bolsas
};

  
// Crear una instancia de Bolsa
const bolsa = new Bolsa('algodón', { ancho: 30, alto: 40 }, 1.00);

// Crear una instancia de Pedido
const pedido = new Pedido(bolsa, 100, 2, 20.00); // 100 bolsas, 2 colores, costo de diseño $20

// Crear una instancia de CalculadoraDeCostos con datosBasicos
const calculadora = new CalculadoraDeCostos(pedido, datosBasicos);

// Calcular el costo total
const costoTotal = calculadora.calcularCostoTotal();

// Calcular el precio de venta con un margen de beneficio del 30%
const precioVenta = calculadora.calcularPrecioVenta(30);

// Mostrar los resultados
console.log(`Costo Total de Producción: $${costoTotal.toFixed(2)}`);
console.log(`Precio Total de Venta: $${precioVenta.toFixed(2)}`);
console.log(`Precio por Bolsa: $${(precioVenta / pedido.cantidad).toFixed(2)}`);


// ----- package.json -----

{
  "name": "bolsas-impresas",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "13.5.7",
    "react": "^18",
    "react-dom": "^18",
    "react-icons": "^5.3.0"
  },
  "devDependencies": {
    "autoprefixer": "^10",
    "eslint": "^8",
    "eslint-config-next": "13.5.7",
    "postcss": "^8",
    "tailwindcss": "^3"
  }
}


// ----- public/data/products.json -----

[
    {
      "id": 1,
      "name": "Bolsa de Papel",
      "description": "Bolsas ecológicas y reciclables.",
      "image": "/images/bolsaPapel.jpg",
      "colors": ["Blanco", "Marrón", "Verde"],
      "sizes": [
        {
          "size": "Pequeña",
          "price": "$5.00"
        },
        {
          "size": "Mediana",
          "price": "$7.50"
        },
        {
          "size": "Grande",
          "price": "$10.00"
        }
      ]
    },
    {
      "id": 2,
      "name": "Bolsa de Algodón",
      "description": "Resistentes y reutilizables.",
      "image": "/images/bolsaAlgodon.jpg",
      "colors": ["Blanco", "Beige", "Negro"],
      "sizes": [
        {
          "size": "Pequeña",
          "price": "$6.00"
        },
        {
          "size": "Mediana",
          "price": "$9.00"
        },
        {
          "size": "Grande",
          "price": "$12.50"
        }
      ]
    }
  ]
  

// ----- public/products.json -----

[
    {
      "id": 1,
      "name": "Bolsa de Papel",
      "description": "Bolsas ecológicas y reciclables.",
      "price": 5000,
      "image": "/images/bolsaPapel.jpg"
    },
    {
      "id": 2,
      "name": "Bolsa de Algodón",
      "description": "Resistentes y reutilizables.",
      "price": 8000,
      "image": "/images/bolsaAlgodon.jpg"
    },
    {
      "id": 3,
      "name": "Bolsa de Plástico",
      "description": "Duraderas y personalizables.",
      "price": 3000,
      "image": "/images/bolsaPlastico.jpg"
    }
  ]
  
